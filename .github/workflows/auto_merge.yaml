name: Auto Merge

on:
  push:
    branches:
      - pre-production

env:
  TO_BRANCH: develop
  FROM_BRANCH: pre-production

jobs:
  create-pull-request:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Setup GitHub CLI
        run: gh auth login --with-token <<< "${{ secrets.GITHUB_TOKEN }}"

      - name: Install jq
        run: sudo apt-get install jq

      - name: Create Pull Request
        id: create-pr
        run: |
          PR_JSON=$(gh api repos/${{ github.repository }}/pulls?base=${{ env.TO_BRANCH }}\&head=${{ env.FROM_BRANCH }})
          PR_EXISTS=$(echo "$PR_JSON" | jq '[.[] | select(.base.ref == $to_branch and .head.ref == $from_branch)] | length > 0' --arg to_branch "${{ env.TO_BRANCH }}" --arg from_branch "${{ env.FROM_BRANCH }}")
          if [ "$PR_EXISTS" != "true" ]; then
          PR_NUMBER=$(gh pr create -B ${{ env.TO_BRANCH }} -H ${{ env.FROM_BRANCH }} --title 'Auto-generated Pull Request' --body 'This PR is auto-generated by GitHub Actions.' --json number | jq -r '.number')
          echo "PR_NUMBER=$PR_NUMBER" >> $GITHUB_ENV
          echo $GITHUB_ENV
          echo $PR_NUMBER
          # gh pr create -B ${{ env.TO_BRANCH }} -H ${{ env.FROM_BRANCH }} --title 'Auto-generated Pull Request' --body 'This PR is auto-generated by GitHub Actions.'
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Auto-approve Pull Request
        uses: hmarr/auto-approve-action@v3
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          pull-request-number: ${{ github.event.inputs.pullRequestNumber }}

      - name: Auto-merge Pull Request
        uses: pascalgn/automerge-action@v0.14.3
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          MERGE_LABELS: automerge
          MERGE_METHOD: squash
          MERGE_COMMIT_MESSAGE: "Auto merge PR"

